[{"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\index.js":"1","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\App.js":"2","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\reportWebVitals.js":"3","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\index.js":"4","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\details\\Details.js":"5","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\displayProducts\\DisplayProducts.js":"6","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\header\\Header.js":"7","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\form\\Form.js":"8","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\modalCart\\ModalCart.js":"9","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\success\\Success.js":"10","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\fetchReducer.js":"11","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\cartReducer.js":"12","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\modalCart\\logoCart.js":"13","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\fetchActions.js":"14","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\index.js":"15","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\actions.js":"16","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\comments\\comments.js":"17","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\seeMoreBtn\\seeMoreBtn.js":"18","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\filters\\Filters.js":"19","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\product\\Product.js":"20","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\myHooks\\myHooks.js":"21","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\product\\productCartCard.js":"22","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\form\\paymentForm\\paymentForm.js":"23","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\form\\productsForm\\productsForm.js":"24","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\cartActions.js":"25","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\orderActions.js":"26","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\form\\shippingForm.js":"27","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\form\\cardForm.js":"28","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\orderReducer.js":"29"},{"size":1090,"mtime":1611795201549,"results":"30","hashOfConfig":"31"},{"size":1111,"mtime":1611795201407,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1611795201553,"results":"33","hashOfConfig":"31"},{"size":326,"mtime":1611798593006,"results":"34","hashOfConfig":"31"},{"size":2704,"mtime":1611795201473,"results":"35","hashOfConfig":"31"},{"size":4919,"mtime":1611795201479,"results":"36","hashOfConfig":"31"},{"size":877,"mtime":1611795201495,"results":"37","hashOfConfig":"31"},{"size":2240,"mtime":1611795201483,"results":"38","hashOfConfig":"31"},{"size":2690,"mtime":1611795201442,"results":"39","hashOfConfig":"31"},{"size":386,"mtime":1611795201504,"results":"40","hashOfConfig":"31"},{"size":3511,"mtime":1611795201520,"results":"41","hashOfConfig":"31"},{"size":1148,"mtime":1611795201518,"results":"42","hashOfConfig":"31"},{"size":458,"mtime":1611795201447,"results":"43","hashOfConfig":"31"},{"size":4064,"mtime":1611795201511,"results":"44","hashOfConfig":"31"},{"size":472,"mtime":1611795201513,"results":"45","hashOfConfig":"31"},{"size":1453,"mtime":1611795201507,"results":"46","hashOfConfig":"31"},{"size":809,"mtime":1611795201415,"results":"47","hashOfConfig":"31"},{"size":750,"mtime":1611795201464,"results":"48","hashOfConfig":"31"},{"size":3927,"mtime":1611795201421,"results":"49","hashOfConfig":"31"},{"size":2886,"mtime":1611795201452,"results":"50","hashOfConfig":"31"},{"size":399,"mtime":1611795201551,"results":"51","hashOfConfig":"31"},{"size":871,"mtime":1611795201457,"results":"52","hashOfConfig":"31"},{"size":1813,"mtime":1611795201487,"results":"53","hashOfConfig":"31"},{"size":1071,"mtime":1611795201491,"results":"54","hashOfConfig":"31"},{"size":435,"mtime":1611795201509,"results":"55","hashOfConfig":"31"},{"size":1090,"mtime":1611801638466,"results":"56","hashOfConfig":"31"},{"size":6785,"mtime":1611795201432,"results":"57","hashOfConfig":"31"},{"size":4048,"mtime":1611795201427,"results":"58","hashOfConfig":"31"},{"size":656,"mtime":1611802242252,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1mxcai6",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\index.js",[],["126","127"],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\App.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\reportWebVitals.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\index.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\details\\Details.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\displayProducts\\DisplayProducts.js",["128","129"],"import React, {useEffect} from 'react';\r\nimport './DisplayProducts.css';\r\nimport Filters from '../../Components/filters/Filters';\r\nimport Product from '../../Components/product/Product';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Store/actions/index';\r\nimport useScrollState from '../../myHooks/myHooks';\r\n\r\n//HOOK VERSION\r\nconst DisplayProducts = (props) => {\r\n\r\n    const { fetchProducts, addPage, products, response, page, filterOption, sortOption, pricesRange, filteredProducts, filterPricesOn } = props;\r\n    const [responseRef, setResponseRef] = useScrollState(response);\r\n    \r\n    //Data products\r\n    useEffect (() => {\r\n        fetchProducts(page, filterOption, sortOption, filterPricesOn, pricesRange);\r\n    }, [fetchProducts, page, filterOption, sortOption])\r\n\r\n    //Filter\r\n    let productsToRender = [];\r\n\r\n    if (filterPricesOn) {\r\n        productsToRender = filteredProducts;\r\n    } else {\r\n        productsToRender = products;\r\n    }\r\n    \r\n    //Scroll\r\n    useEffect (() => {\r\n        setResponseRef(response)\r\n    }, [response, setResponseRef]);\r\n\r\n    function scrolling (event) {\r\n        \r\n        const { scrollTop, clientHeight, scrollHeight } = event.srcElement.documentElement;\r\n\r\n        console.log('entro al evento')\r\n        \r\n        if (Math.ceil(scrollHeight - scrollTop) === clientHeight) {\r\n            console.log('entro al primer if')\r\n            if (!(responseRef.current.currentPage === responseRef.current.pages)) {\r\n                console.log('entro a cambiar pagina')\r\n                addPage();\r\n            }\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window) {\r\n            window.addEventListener('scroll', scrolling);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('scroll', scrolling);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className =\"productsBox\">\r\n            <Filters\r\n            />\r\n            <div>\r\n                <h1 className=\"productsTitle\">Our products:</h1>\r\n                <div className=\"productsGrid\">\r\n                    {productsToRender.map(( product => {\r\n                        return(\r\n                        <Product \r\n                        key={product.id}   \r\n                        productId={product.id}\r\n                        productImg={product.img}\r\n                        productName={product.name}\r\n                        productCom={product.comments}\r\n                        productPrice={product.price}\r\n                        productBasics={product.basics}\r\n                        productRate={product.rate}\r\n                        productAdded={()=> props.addProductCart(product)}\r\n                        />\r\n                        )\r\n                    })\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => { //rootreducer acceder a las variables que componen mi estado global, visualizar, validación\r\n    return {\r\n        products: state.fetchR.products,\r\n        response: state.fetchR.response,\r\n        page: state.fetchR.page,\r\n        filterOption: state.fetchR.filterOption,\r\n        sortOption: state.fetchR.sortOption,\r\n        pricesRange: state.fetchR.pricesRange,\r\n        filteredProducts: state.fetchR.filteredProducts,\r\n        filterPricesOn: state.fetchR.filterPricesOn,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => { //traer action creator \r\n    return{\r\n        fetchProducts: (page, filterOption, sortOption, pricesRange, filteredProducts, filterPricesOn) => dispatch(actions.fetchProducts(page, filterOption, sortOption, pricesRange, filteredProducts, filterPricesOn)),\r\n        addPage: () => dispatch(actions.addPage()),\r\n        addProductCart: (productInfo) => dispatch(actions.addProductCart(productInfo))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayProducts);\r\n\r\n//CLASS VERSION\r\n\r\n//import React,{ Component } from 'react';\r\n\r\n// import Product from '../../Components/product/Product';\r\n\r\n// class DisplayProducts extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { products: [], filteredProducts: [] };\r\n//     }\r\n    \r\n//     componentWillMount() {\r\n//         fetch(`http://localhost:8080/products`).then(res => res.json())\r\n//         .then(data => this.setState({\r\n//             products: data.products,\r\n//             filteredProducts: data.products,\r\n//         }));\r\n//     }\r\n\r\n//     render () {\r\n//         return (\r\n//         <div>\r\n//             <h1 className=\"productsTitle\"> Our products: </h1>\r\n//                 <div className = \"productsGrid\">\r\n//                 <Product products={this.state.filteredProducts} /*handleAddToCart={this.handleAddToCart}*/ />\r\n//                 </div>\r\n//         </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default DisplayProducts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\header\\Header.js",["130"],"import React, { useState } from 'react';\r\nimport './Header.css';\r\nimport ShoppingCartLogo from '../../Components/modalCart/logoCart';\r\nimport globantShops from '../../assets/globant-shops.svg';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Header = (props) => {\r\n\r\n    const { clicked, productCounter } = props;\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <header>\r\n            <img src = {globantShops} alt=\"logo\" />\r\n            {location.pathname === '/ordering' || location.pathname === '/success' ?\r\n            null\r\n            : <ShoppingCartLogo clicked={clicked} productCounter={productCounter} />}\r\n        </header>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productCounter: state.cartR.productCounter,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\form\\Form.js",["131"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Form.css';\r\nimport * as actions from '../../Store/actions/index';\r\nimport PaymentForm from './paymentForm/paymentForm';\r\nimport ProductsForm from './productsForm/productsForm';\r\n\r\nconst Form = (props) => {\r\n\r\n    const {cartProducts, totalPrice, orderConfirmed, removeProductCart, purchaseProducts } = props;\r\n\r\n    const [formIsValid, setFormIsValid] = useState(false);  // ambos formularios estan correctos\r\n    const [orderData, setOrderData] = useState({});  // data de ambos formularios ya está completa\r\n    /*useEffect( () => {\r\n        if (orderConfirmed) {\r\n            <Link to={'/success'} />\r\n        }\r\n    })*/\r\n    const history = useHistory();\r\n\r\n    const handlePaymentClick = () => {\r\n        console.log('entro al handleClick, no if')\r\n        if (formIsValid) {\r\n            console.log('entró a handlePaymentClick')\r\n            purchaseProducts(orderData)\r\n        };\r\n    };\r\n\r\n    useEffect ( () => {\r\n        if (orderConfirmed) {\r\n            history.push('/success');\r\n        };\r\n    },[orderConfirmed, history])\r\n    \r\n    return (\r\n        <div>\r\n            <PaymentForm\r\n                setFormIsValid = {setFormIsValid}\r\n                setOrderData = {setOrderData}\r\n            />\r\n            <ProductsForm\r\n                cartProducts = {cartProducts}\r\n                totalPrice = {totalPrice}\r\n                removeProductCart = {removeProductCart}\r\n                handlePaymentClick = {handlePaymentClick}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cartProducts: state.cartR.cart,\r\n        totalPrice: state.cartR.totalPrice,\r\n        orderConfirmed: state.orderR.orderConfirmed,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeProductCart: (productId, productPrice) => dispatch(actions.removeProductCart(productId,productPrice)),\r\n        purchaseProducts: (orderData) => dispatch(actions.purchaseProducts(orderData)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\modalCart\\ModalCart.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\success\\Success.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\fetchReducer.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\cartReducer.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\modalCart\\logoCart.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\fetchActions.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\index.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\actions.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\comments\\comments.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\seeMoreBtn\\seeMoreBtn.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\filters\\Filters.js",["132"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { filterBasics, filterBasicsRemove, filterPrices, sortRatingPrices, sortRemove } from '../../Store/actions/index';\r\nimport './Filters.css';\r\n\r\nconst Filters = (props) => {\r\n\r\n    const { basicsClick, basicsClickRemove, sortOptionClick, sortOptionClickRemove, filterPrices } = props;\r\n\r\n    //Filter basics\r\n    const basicsChecked = (event) => {\r\n        console.log('basicsCheck')\r\n        if (event.target.checked) {\r\n            basicsClick('basics');\r\n            console.log('click básico')\r\n        } else {\r\n            basicsClickRemove();\r\n            console.log('fuera')\r\n        }\r\n    }\r\n\r\n    //Sort Rating\r\n    const sortHigherPriceRating = (event) => {\r\n        console.log('entra a función sortHigherPriceRating')\r\n        console.log(event)\r\n        if(event.target.value === 'Prices') {\r\n            sortOptionClick(event.target.value);\r\n            console.log('higher price first :D')\r\n        } else if (event.target.value === 'Rating') {\r\n            sortOptionClick(event.target.value);\r\n            console.log('higher rating first :D')\r\n        } else {\r\n            sortOptionClickRemove();\r\n        }\r\n    }\r\n\r\n    //Filter range prices\r\n    const filterRangePrices = (event) => {\r\n        console.log(event.target.value);\r\n        console.log('selecciono filtro precios :D')\r\n        filterPrices(event.target. value);\r\n    }\r\n\r\n    return (\r\n        <div className = \"filters\">\r\n            <div className=\"categories\">\r\n                <div className=\"filterBasic\">\r\n                    <h2>Filters:</h2>\r\n                            <label>\r\n                                <input type=\"checkbox\" name=\"basicsCheck\" onChange={basicsChecked}/> Basics\r\n                            </label>\r\n                </div>\r\n                <br/>\r\n                <div className=\"filterPrice\">\r\n                    <h2>Prices:</h2>\r\n                            <label>\r\n                                <input type=\"radio\" name=\"priceRange\" value=\"1_to_50\" onChange={filterRangePrices}/> $1 - $50\r\n                            </label><br/>\r\n\r\n                            <label>\r\n                                <input type=\"radio\" name=\"priceRange\" value=\"51_to_100\" onChange={filterRangePrices} /> $51 - $100\r\n                            </label><br/>\r\n\r\n                            <label>\r\n                                <input type=\"radio\" name=\"priceRange\" value=\"101_to_200\" onChange={filterRangePrices}/> $101 - $200\r\n                            </label>\r\n                </div>\r\n                <br/>\r\n                <div className=\"sortProducts\">\r\n                    <h2>Sort by:</h2>\r\n                        <select name=\"price\" onChange={sortHigherPriceRating}>\r\n                            <option value=\"default\"></option>\r\n                            <option value=\"Prices\">Price</option>\r\n                            <option value=\"Rating\">Rating</option>\r\n                        </select>\r\n                </div>\r\n            </div>\r\n            <div className = \"v1\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*const mapStateToProps = (state) => { //rootreducer\r\n    return {\r\n        basics: state.fetchR.basics,\r\n        rating: state.fetchR.rating,\r\n        pricesRange: state.fetchR.pricesRange,\r\n        filteredProducts: state.fetchR.filteredProducts,\r\n        filterPrices: state.fetchR.filterPrices,\r\n    }\r\n}*/\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        basicsClick: (filterOption) => dispatch(filterBasics(filterOption)),\r\n        basicsClickRemove: () => dispatch(filterBasicsRemove()),\r\n        sortOptionClick: (sortOption) => dispatch(sortRatingPrices(sortOption)),\r\n        sortOptionClickRemove: () => dispatch(sortRemove()),\r\n        filterPrices: (priceFilter) => dispatch(filterPrices(priceFilter)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Filters);","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\product\\Product.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\myHooks\\myHooks.js",["133"],"import React, { useState, useRef} from \"react\";\r\n\r\nexport default function useScrollState(initialValue) {\r\n    \r\n    const [scrollState, setScrollState] = useState(initialValue);\r\n    const scrollRef = useRef(scrollState);\r\n\r\n    const setCurrentScrollState = value => {\r\n        scrollRef.current = value;\r\n        setScrollState(value);\r\n    };\r\n\r\n    return [scrollRef, setCurrentScrollState];\r\n}","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\product\\productCartCard.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\form\\paymentForm\\paymentForm.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Containers\\form\\productsForm\\productsForm.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\cartActions.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\actions\\orderActions.js",[],"C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\form\\shippingForm.js",["134","135"],"import React, { useState, useEffect} from 'react';\r\nimport './shippingForm.css';\r\n\r\nconst ShippingForm = (props) => {\r\n\r\n    const { setShippingData, setShippingDataIsValid } = props;\r\n\r\n    const [nameUser, setNameUser] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [address, setAddress] = useState(null);\r\n    const [city, setCity] = useState(null);\r\n    const [stateUser, setStateUser] = useState(null);\r\n    const [zipCode, setZipCode] = useState(null);\r\n    const [phoneNumber, setPhoneNumber] = useState(null);\r\n\r\n    const [inputName, setInputName] = useState(false);\r\n    const [inputLastName, setInputLastName] = useState(false);\r\n    const [inputAddress, setInputAddress] = useState(false);\r\n    const [inputCity, setInputCity] = useState(false);\r\n    const [inputState, setInputState] = useState(false);\r\n    const [inputZipCode, setInputZipCode] = useState(false);\r\n    const [inputPhoneNumber, setInputPhoneNumber] = useState(false);\r\n\r\n    //Validación en componente porque no se reutilizará\r\n    const zipCodeValidate = (zipcode) => {  \r\n        fetch(`http://localhost:8080/validate/zipcode/${zipcode}`, {\r\n            method: 'POST',                 // no hay body, sólo se pide un query param\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(responseJson => {\r\n                if(responseJson.message === 'success') {\r\n                    setInputZipCode(true);\r\n                } else {\r\n                    setInputZipCode(false);\r\n                };\r\n            })\r\n            .catch(error => console.log(error));\r\n    }   \r\n\r\n    //Buena práctica - validación cada cierto tiempo\r\n    useEffect(() => {\r\n        const timeId = setTimeout(() => zipCodeValidate(zipCode), 1000);\r\n        return () => clearTimeout(timeId);\r\n    }, [zipCode]);\r\n\r\n    useEffect ( () => {\r\n        const validateShippingForm = () => {\r\n            console.log(inputName, inputLastName, inputAddress, inputCity, inputState, inputPhoneNumber, inputZipCode)\r\n            if(inputName, inputLastName, inputAddress, inputCity, inputState, inputPhoneNumber, inputZipCode) {\r\n                setShippingDataIsValid(true);\r\n                setShippingData ({\r\n                    address: address,\r\n                    city: city,\r\n                    state: stateUser,\r\n                    phoneNumber: phoneNumber,\r\n                    fullName: `${nameUser} ${lastName}`, \r\n                    zipCode: zipCode,\r\n                });\r\n            } else {\r\n                setShippingDataIsValid(false);\r\n            };\r\n        };\r\n        validateShippingForm();\r\n    }, [inputName, inputLastName, inputAddress, inputCity, inputState, inputPhoneNumber, inputZipCode])\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        if(name === \"name\") {\r\n            setNameUser(value);\r\n            if(value.length > 2) {\r\n                setInputName(true);\r\n                console.log('nombre correcto');\r\n            } else {\r\n                setInputName(false);\r\n            };\r\n        };\r\n\r\n        if( name === \"address\") {\r\n            setAddress(value);\r\n            if(value.length > 5) {\r\n                setInputAddress(true);\r\n                console.log('dirección correcta');\r\n            } else {\r\n                setInputAddress(false);\r\n            };\r\n        };\r\n\r\n        if (name === \"state\") {\r\n            setStateUser(value);\r\n            if(value.length > 2) {\r\n                setInputState(true);\r\n                console.log('estado correcto');\r\n            } else {\r\n                setInputState(false);\r\n            };\r\n        };\r\n\r\n        if(name === \"telephone\")  {\r\n            setPhoneNumber(value);\r\n            if(value.length > 8) {\r\n                setInputPhoneNumber(true);\r\n                console.log('teléfono correcto');\r\n            } else {\r\n                setInputPhoneNumber(false);\r\n            };\r\n        };\r\n\r\n        if(name === \"lastName\")  {\r\n            setLastName(value);\r\n            if(value.length > 3) {\r\n                setInputLastName(true);\r\n                console.log('apellido correcto');\r\n            } else {\r\n                setInputLastName(false);\r\n            };\r\n        };\r\n\r\n        if(name === \"city\")  {\r\n            setCity(value);\r\n            if(value.length > 2) {\r\n                setInputCity(true);\r\n                console.log('ciudad correcta');\r\n            } else {\r\n                setInputCity(false);\r\n            };\r\n        };\r\n\r\n        if(name === \"zipCode\") {\r\n            setZipCode(value);\r\n            if(value.length === 5 ) {\r\n                setInputZipCode(true);\r\n                console.log('zip correcto');\r\n            } else {\r\n                setInputZipCode(false);\r\n            };\r\n        }\r\n    }\r\n\r\n    return(\r\n        <fieldset className=\"shippingForm\">\r\n        <legend>Shipping Data:</legend><br/>\r\n        <div>\r\n            <div>\r\n                <label>Name</label><br/>\r\n                <input type=\"text\" name=\"name\" value={nameUser} onChange={handleChange} required />\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label>Address</label><br/>\r\n                <input type=\"text\" name=\"address\" value={address} onChange={handleChange} required />\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label>State</label><br/>\r\n                <input type=\"text\" name=\"state\" value={stateUser} onChange={handleChange}  required />\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label>Phonenumber</label><br/>\r\n                <input type=\"tel\" name=\"telephone\" value={phoneNumber} onChange={handleChange}  required />\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <div>\r\n                <label>Last Name</label><br/>\r\n                <input type=\"text\" name=\"lastName\" value={lastName} onChange={handleChange}  required />\r\n                <br/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label>City</label><br/>\r\n                <input type=\"text\" name=\"city\" value={city} onChange={handleChange}  required />\r\n                <br/>                    \r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label>Zip Code</label><br/>\r\n                <input type=\"text\" name=\"zipCode\" value={zipCode} onChange={handleChange} required /> {/* forma alternativa // onChange={ (e) => setZipCode(e.target.value)} */}\r\n                <br/>\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n    );\r\n};\r\n\r\nexport default ShippingForm;","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Components\\form\\cardForm.js",["136"],"import React, { useState, useEffect } from 'react';\r\nimport './cardForm.css';\r\n\r\nconst CardForm = (props) => {\r\n\r\n    const { setCardData, setCardDataIsValid } = props;\r\n\r\n    const [cardNumber, setCardNumber] = useState(null);\r\n    const [fullName, setFullName] = useState(null);\r\n    const [expDate, setExpDate] = useState(null);\r\n    const [cvv, setCvv] = useState(null);\r\n\r\n    const[inputCardNumber, setInputCardNumber] = useState(false);\r\n    const[inputFullName, setInputFullName] = useState(false);\r\n    const[inputExpDate, setInputExpDate] = useState(false);\r\n    const[inputCvv, setInputCvv] = useState(false);\r\n\r\n    const creditCardValidate = (ccnumber) => {\r\n        fetch(`http://localhost:8080/validate/creditcard/${ccnumber}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(responseJson => {\r\n                if (responseJson.message === 'success') {\r\n                    setInputCardNumber(true);\r\n                } else {\r\n                    setInputCardNumber(false);\r\n                };\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timeId = setTimeout(() => creditCardValidate(cardNumber), 1000);\r\n        return () => clearTimeout(timeId);\r\n    }, [cardNumber]);\r\n\r\n    useEffect(() => {\r\n        const validateCardForm = () => {\r\n            if (inputCardNumber && inputFullName && inputExpDate && inputCvv) {\r\n                setCardDataIsValid(true);\r\n                setCardData ({  //value \r\n                    creditCard: cardNumber,\r\n                    cvv: cvv,\r\n                    expDate: expDate,\r\n                    fullName: fullName,\r\n                });\r\n            } else {\r\n                setCardDataIsValid(false);\r\n            };\r\n        };\r\n        validateCardForm();\r\n    }, [inputCardNumber, inputFullName, inputExpDate, inputCvv])\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        if (name === 'cardNumber') {\r\n            setCardNumber(value);\r\n            if (value.length > 16) {\r\n                setInputCardNumber(true);\r\n            } else {\r\n                setInputCardNumber(false);\r\n            }\r\n        }\r\n        if (name === 'fullName') {\r\n            setFullName(value);\r\n            if (value.length > 5) {\r\n                setInputFullName(true);\r\n            } else {\r\n                setInputFullName(false);\r\n            }\r\n        }\r\n        if (name === 'expDate') {\r\n            setExpDate(value);\r\n            if (value.length >= 4) {\r\n                setInputExpDate(true);\r\n            } else {\r\n                setInputExpDate(false);\r\n            }\r\n        }\r\n        if(name === 'cvv') {\r\n            setCvv(value);\r\n            if(value.length === 3) { //regex\r\n                setInputCvv(true);\r\n            } else {\r\n                setInputCvv(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n    <fieldset className=\"cardForm\">\r\n        <legend>Credit Card data:</legend>\r\n        <br/>\r\n        <div>\r\n            <div>\r\n                <label>Credit Card Number</label> <br/>\r\n                <input type=\"number\" name=\"cardNumber\" value={cardNumber} onChange={handleChange} required />\r\n            </div>\r\n            <br/>\r\n\r\n            <div>\r\n            <label>Full Name</label> <br/>\r\n            <input type=\"text\" name=\"fullName\" value={fullName} onChange={handleChange} required />\r\n            </div>\r\n            <br/>\r\n\r\n            <label>Exp. Date</label><br/>\r\n            <input type=\"text\" name=\"expDate\" value={expDate} onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div>\r\n            <br/><br/><br/><br/><br/><br/><br/>\r\n            <label>CVV</label><br/>\r\n            <input type=\"number\" name=\"cvv\" value={cvv} onChange={handleChange} required />\r\n        </div>\r\n    </fieldset>\r\n    )\r\n};\r\n\r\nexport default CardForm;","C:\\Users\\jhovanny.bahena\\Desktop\\ReactJS_cart_shop\\src\\Store\\reducers\\orderReducer.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":18,"column":8,"nodeType":"143","endLine":18,"endColumn":55,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":56,"column":8,"nodeType":"143","endLine":56,"endColumn":10,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"151","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":41,"column":22,"nodeType":"154","messageId":"155","endLine":41,"endColumn":41,"fix":"156"},{"ruleId":"147","severity":1,"message":"157","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"159","line":54,"column":25,"nodeType":"160","messageId":"161","endLine":54,"endColumn":26},{"ruleId":"141","severity":1,"message":"162","line":69,"column":8,"nodeType":"143","endLine":69,"endColumn":103,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"164","line":57,"column":8,"nodeType":"143","endLine":57,"endColumn":64,"suggestions":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterPricesOn' and 'pricesRange'. Either include them or remove the dependency array.","ArrayExpression",["168"],"React Hook useEffect has a missing dependency: 'scrolling'. Either include it or remove the dependency array.",["169"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property value.","MemberExpression","unexpectedWhitespace",{"range":"170","text":"171"},"'React' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'address', 'city', 'lastName', 'nameUser', 'phoneNumber', 'setShippingData', 'setShippingDataIsValid', 'stateUser', and 'zipCode'. Either include them or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'cardNumber', 'cvv', 'expDate', 'fullName', 'setCardData', and 'setCardDataIsValid'. Either include them or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},[1413,1415],".",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [fetchProducts, page, filterOption, sortOption, filterPricesOn, pricesRange]",{"range":"182","text":"183"},"Update the dependencies array to be: [scrolling]",{"range":"184","text":"185"},"Update the dependencies array to be: [inputName, inputLastName, inputAddress, inputCity, inputState, inputPhoneNumber, inputZipCode, setShippingDataIsValid, setShippingData, address, city, stateUser, phoneNumber, nameUser, lastName, zipCode]",{"range":"186","text":"187"},"Update the dependencies array to be: [inputCardNumber, inputFullName, inputExpDate, inputCvv, setCardDataIsValid, setCardData, cardNumber, cvv, expDate, fullName]",{"range":"188","text":"189"},[752,799],"[fetchProducts, page, filterOption, sortOption, filterPricesOn, pricesRange]",[1830,1832],"[scrolling]",[2768,2863],"[inputName, inputLastName, inputAddress, inputCity, inputState, inputPhoneNumber, inputZipCode, setShippingDataIsValid, setShippingData, address, city, stateUser, phoneNumber, nameUser, lastName, zipCode]",[1941,1997],"[inputCardNumber, inputFullName, inputExpDate, inputCvv, setCardDataIsValid, setCardData, cardNumber, cvv, expDate, fullName]"]